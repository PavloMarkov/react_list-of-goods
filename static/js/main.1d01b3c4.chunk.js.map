{"version":3,"sources":["App.tsx","GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","this","props","className","map","good","React","PureComponent","goodsFromServer","App","state","isStarted","isReversed","sortType","minLength","getReorderedGoods","visibleGoods","ALPABET","sort","a","b","localeCompare","LENGTH","length","NONE","reverse","filter","onStart","setState","sortAlphabetically","sortByLength","reverseSort","reset","minLengthSort","numLengthToSort","goodsToShow","type","onClick","name","id","value","onChange","event","currentTarget","Array","fill","option","i","val","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,0ECZQC,EAAb,4JACE,WACE,IAAQC,EAAUC,KAAKC,MAAfF,MAER,OACE,oBAAIG,UAAU,QAAd,SACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,oBAAIF,UAAU,cAAd,SACGE,GAD8BA,YAP3C,GAA+BC,IAAMC,eDDxBC,G,MAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SAGGV,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAaE,IAAMW,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAU,EACVC,UAAW,GALf,EAQEC,kBAAoB,SAClBf,EACAa,EACAD,EACAE,GAEA,IAAME,EAAY,YAAOhB,GAEzB,OAAQa,GACN,KAAKf,EAASmB,QACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKtB,EAASwB,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAE3C,KAAKzB,EAAS0B,MAShB,OAJIZ,GACFI,EAAaS,UAGRT,EAAaU,QAAO,SAAArB,GAAI,OAC7BA,EAAKkB,QAAUT,MAjCrB,EAqCEa,QAAU,WACR,EAAKC,UAAS,SAAAlB,GAAK,MAAK,CACtBC,WAAYD,EAAMC,eAvCxB,EA2CEkB,mBAAqB,WACnB,EAAKD,SAAS,CACZf,SAAUf,EAASmB,WA7CzB,EAiDEa,aAAe,WACb,EAAKF,SAAS,CACZf,SAAUf,EAASwB,UAnDzB,EAuDES,YAAc,WACZ,EAAKH,UAAS,SAAAlB,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAzDzB,EA6DEoB,MAAQ,WACN,EAAKJ,SAAS,CACZf,SAAUf,EAAS0B,KACnBZ,YAAY,EACZE,UAAW,KAjEjB,EAqEEmB,cAAgB,SAACC,GACf,EAAKN,SAAS,CACZd,UAAWoB,KAvEjB,4CA2EE,WAAU,IAAD,OACP,EAKIjC,KAAKS,MAJPC,EADF,EACEA,UACAE,EAFF,EAEEA,SACAD,EAHF,EAGEA,WACAE,EAJF,EAIEA,UAGIqB,EAAclC,KAAKc,kBACvBP,EAAiBK,EAAUD,EAAYE,GAGzC,OACE,sBAAKX,UAAU,MAAf,WACIQ,GACA,wBACEyB,KAAK,SACLjC,UAAU,oBACVkC,QAASpC,KAAK0B,QAHhB,mBASDhB,GACC,qCACE,wBACEyB,KAAK,SACLjC,UAAS,iBAAyB,IAAbU,EAAiB,UAAY,IAClDwB,QAASpC,KAAK4B,mBAHhB,iCAQA,wBACEO,KAAK,SACLjC,UAAS,iBAAyB,IAAbU,EAAiB,UAAY,IAClDwB,QAASpC,KAAK6B,aAHhB,4BAQA,wBACEM,KAAK,SACLjC,UAAS,iBAAYS,EAAa,aAAe,IACjDyB,QAASpC,KAAK8B,YAHhB,qBAQA,wBACEK,KAAK,SACLjC,UAAU,mBACVkC,QAASpC,KAAK+B,MAHhB,mBAQA,cAAC,EAAD,CAAWhC,MAAOmC,IAElB,gEAEA,wBACEG,KAAK,YACLC,GAAG,YACHpC,UAAU,iBACVqC,MAAO1B,EACP2B,SAAU,SAACC,GAAD,OACR,EAAKT,eAAeS,EAAMC,cAAcH,QAN5C,SASGI,MAAM,IAAIC,KAAK,GAAGzC,KAAI,SAAC0C,EAAQC,GAC9B,IAAMC,EAAMF,EAASC,EAErB,OACE,wBACEP,MAAOQ,EADT,SAIGA,GAFIA,kBAxJzB,GAAyB1C,IAAM2C,WE5B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1d01b3c4.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport { GoodsList } from './GoodsList';\nimport './App.css';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n  minLength: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: 0,\n    minLength: 1,\n  };\n\n  getReorderedGoods = (\n    goods: string[],\n    sortType: SortType,\n    isReversed: boolean,\n    minLength: number,\n  ) => {\n    const visibleGoods = [...goods];\n\n    switch (sortType) {\n      case SortType.ALPABET:\n        visibleGoods.sort((a, b) => a.localeCompare(b));\n        break;\n      case SortType.LENGTH:\n        visibleGoods.sort((a, b) => a.length - b.length);\n        break;\n      case SortType.NONE:\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods.filter(good => (\n      good.length >= minLength\n    ));\n  };\n\n  onStart = () => {\n    this.setState(state => ({\n      isStarted: !state.isStarted,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reverseSort = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n      minLength: 1,\n    });\n  };\n\n  minLengthSort = (numLengthToSort: number) => {\n    this.setState({\n      minLength: numLengthToSort,\n    });\n  };\n\n  render() {\n    const {\n      isStarted,\n      sortType,\n      isReversed,\n      minLength,\n    } = this.state;\n\n    const goodsToShow = this.getReorderedGoods(\n      goodsFromServer, sortType, isReversed, minLength,\n    );\n\n    return (\n      <div className=\"App\">\n        {!isStarted && (\n          <button\n            type=\"button\"\n            className=\"button is-success\"\n            onClick={this.onStart}\n          >\n            Start\n          </button>\n        )}\n\n        {isStarted && (\n          <>\n            <button\n              type=\"button\"\n              className={`button ${sortType === 1 ? 'is-info' : ''}`}\n              onClick={this.sortAlphabetically}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className={`button ${sortType === 2 ? 'is-link' : ''}`}\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className={`button ${isReversed ? 'is-warning' : ''}`}\n              onClick={this.reverseSort}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-danger\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n\n            <GoodsList goods={goodsToShow} />\n\n            <p>Select min size of word to sort</p>\n\n            <select\n              name=\"minLength\"\n              id=\"minLength\"\n              className=\"select is-link\"\n              value={minLength}\n              onChange={(event) => (\n                this.minLengthSort(+event.currentTarget.value)\n              )}\n            >\n              {Array(10).fill(1).map((option, i) => {\n                const val = option + i;\n\n                return (\n                  <option\n                    value={val}\n                    key={val}\n                  >\n                    {val}\n                  </option>\n                );\n              })}\n            </select>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ninterface Props {\n  goods: string[],\n}\n\nexport class GoodsList extends React.PureComponent<Props, {}> {\n  render() {\n    const { goods } = this.props;\n\n    return (\n      <ul className=\"Goods\">\n        {goods.map(good => (\n          <li className=\"Goods__item\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}